{"version":3,"file":"components-alert-__stories__-Alert-stories.69d82be6.iframe.bundle.js","mappings":";;;;;;;;;AAyCA","sources":["webpack://retro-react/./src/components/alert/Alert.styled.tsx"],"sourcesContent":["import { css, keyframes, Theme } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { alterColor, alterColorEnhanced } from '@src/utils/alterColor';\nimport {\n\tERROR,\n\tPRIMARY,\n\tSECONDARY,\n\tSHADE_1,\n\tSHADE_6,\n\tSUCCESS,\n\tWARN,\n} from '@src/constants/colors';\nimport type { AlertColor } from './Alert';\n\nfunction getColorScheme(color: AlertColor, theme: Theme) {\n\tswitch (color) {\n\t\tcase 'error':\n\t\t\treturn (theme.colors && theme.colors[color]) || ERROR;\n\t\tcase 'success':\n\t\t\treturn (theme.colors && theme.colors[color]) || SUCCESS;\n\t\tcase 'warn':\n\t\t\treturn (theme.colors && theme.colors[color]) || alterColor(WARN, 150);\n\t\tcase 'secondary':\n\t\t\treturn (theme.colors && theme.colors[color]) || SECONDARY;\n\t\tcase 'primary':\n\t\tdefault:\n\t\t\treturn (theme.colors && theme.colors[color]) || PRIMARY;\n\t}\n}\n\nconst opacityAnimation = keyframes`\n\tfrom {\n\t\topacity: 0;\n\t\ttransform: translateY(20%);\n\t}\n\tto {\n\t\topacity: 1;\n\t\ttransform: translateY(0);\n\t}\n`;\n\nexport const Alert = styled.div<{ $color: AlertColor; $isOpenProp?: boolean }>`\n\tdisplay: inline-flex;\n\tflex-direction: column;\n\tposition: relative;\n\tpadding: 0.2rem 3rem 0.3rem 1.2rem;\n\tfont-size: 0.875rem;\n\tfont-family: 'Trebuchet MS', Helvetica, sans-serif;\n\tborder-top: 2px solid ${SHADE_6};\n\tbackground: linear-gradient(\n\t\tto right,\n\t\t${({ $color, theme }) =>\n\t\t\t\talterColorEnhanced(getColorScheme($color, theme), -20)}\n\t\t\t80%,\n\t\t${({ $color, theme }) => getColorScheme($color, theme)} 100%\n\t);\n\tcolor: ${SHADE_1};\n\twidth: 100%;\n\tmin-height: 2.5rem;\n\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 0.5rem;\n\t\theight: 100%;\n\t\tbackground: ${({ $color, theme }) => getColorScheme($color, theme)};\n\t}\n\n\t${({ $isOpenProp }) =>\n\t\t$isOpenProp &&\n\t\tcss`\n\t\t\tanimation: ${opacityAnimation} 0.15s ease-out;\n\t\t`}\n`;\n\nexport const Title = styled.div`\n\tfont-weight: 700;\n\tmargin-bottom: 0.2rem;\n`;\n\nexport const CloseButton = styled.button<{ $icon: string; $color: AlertColor }>`\n\tposition: absolute;\n\ttop: 0.2rem;\n\tright: 0.2rem;\n\twidth: 1.5rem;\n\theight: 1.5rem;\n\tborder: none;\n\tborder-radius: 50%;\n\tcursor: pointer;\n\n\tmask: url(${({ $icon }) => $icon});\n\tbackground-color: ${({ $color, theme }) =>\n\t\talterColorEnhanced(getColorScheme($color, theme), 60)};\n\n\t&:hover {\n\t\ttransform: scale(1.1);\n\t}\n\n\t&:active {\n\t\ttransform: scale(0.9);\n\t}\n`;\n"],"names":[],"sourceRoot":""}