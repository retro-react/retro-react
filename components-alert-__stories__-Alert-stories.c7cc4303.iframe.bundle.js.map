{"version":3,"file":"components-alert-__stories__-Alert-stories.c7cc4303.iframe.bundle.js","mappings":";;;;;;;;;AA4CA;;;AAKA","sources":["webpack://retro-react/./src/components/alert/Alert.styled.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {\n\tERROR,\n\tPRIMARY,\n\tSECONDARY,\n\tSUCCESS,\n\tVGA_BLACK,\n\tVGA_WHITE,\n\tWARN,\n\tWIN31_BUTTON_FACE,\n\tWIN31_BUTTON_HIGHLIGHT,\n\tWIN31_BUTTON_SHADOW,\n} from '@src/constants/colors';\nimport { FONT_SIZES, SYSTEM_FONT } from '@src/constants/fonts';\nimport type { AlertColor } from './Alert';\n\nfunction getColorScheme(color: AlertColor) {\n\tswitch (color) {\n\t\tcase 'error':\n\t\t\treturn ERROR;\n\t\tcase 'success':\n\t\t\treturn SUCCESS;\n\t\tcase 'warn':\n\t\t\treturn WARN;\n\t\tcase 'secondary':\n\t\t\treturn SECONDARY;\n\t\tcase 'primary':\n\t\tdefault:\n\t\t\treturn PRIMARY;\n\t}\n}\n\nconst slideIn = keyframes`\n\tfrom {\n\t\topacity: 0;\n\t\ttransform: translateX(-100%);\n\t}\n\tto {\n\t\topacity: 1;\n\t\ttransform: translateX(0);\n\t}\n`;\n\nconst blink = keyframes`\n\t0%, 50% { opacity: 1; }\n\t51%, 100% { opacity: 0; }\n`;\n\nexport const Alert = styled.div<{ $color: AlertColor; $isOpenProp?: boolean }>`\n\tdisplay: inline-flex;\n\tflex-direction: column;\n\tposition: relative;\n\tpadding: 12px 48px 12px 16px;\n\tfont-size: ${FONT_SIZES.NORMAL};\n\tfont-family: ${SYSTEM_FONT};\n\tfont-weight: normal;\n\tborder: 2px solid;\n\tborder-color: ${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT}\n\t\t${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW};\n\tbackground: ${WIN31_BUTTON_FACE};\n\tcolor: ${VGA_BLACK};\n\twidth: 100%;\n\tmin-height: 40px;\n\tbox-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.1);\n\n\t/* Remove modern styling */\n\tborder-radius: 0;\n\n\t/* Alert color indicator */\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 2px;\n\t\tleft: 2px;\n\t\tbottom: 2px;\n\t\twidth: 4px;\n\t\tbackground: ${({ $color }) => getColorScheme($color)};\n\t}\n\n\t/* Blinking indicator for errors */\n\t${({ $color }) =>\n\t\t$color === 'error' &&\n\t\tcss`\n\t\t\t&::after {\n\t\t\t\tcontent: '●';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: 8px;\n\t\t\t\tright: 8px;\n\t\t\t\tcolor: ${ERROR};\n\t\t\t\tfont-size: 12px;\n\t\t\t\tanimation: ${blink} 1s infinite;\n\t\t\t}\n\t\t`}\n\n\t${({ $isOpenProp }) =>\n\t\t$isOpenProp &&\n\t\tcss`\n\t\t\tanimation: ${slideIn} 0.2s ease-out;\n\t\t`}\n`;\n\nexport const Title = styled.div`\n\tfont-weight: bold;\n\tmargin-bottom: 4px;\n\tcolor: ${VGA_BLACK};\n\tfont-family: ${SYSTEM_FONT};\n\ttext-shadow: 1px 1px 0px rgba(255, 255, 255, 0.8);\n`;\n\nexport const CloseButton = styled.button<{ $icon: string; $color: AlertColor }>`\n\tposition: absolute;\n\ttop: 8px;\n\tright: 8px;\n\twidth: 20px;\n\theight: 20px;\n\tborder: 1px solid;\n\tborder-color: ${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW}\n\t\t${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT};\n\tbackground: ${WIN31_BUTTON_FACE};\n\tcolor: ${VGA_BLACK};\n\tfont-family: ${SYSTEM_FONT};\n\tfont-size: 12px;\n\tfont-weight: bold;\n\tcursor: pointer;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\ttransition: none;\n\n\t/* X mark */\n\t&::before {\n\t\tcontent: '×';\n\t\tline-height: 1;\n\t}\n\n\t&:hover {\n\t\tbackground: ${({ $color }) => getColorScheme($color)};\n\t\tcolor: ${VGA_WHITE};\n\t\tborder-color: ${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT}\n\t\t\t${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW};\n\t}\n\n\t&:active {\n\t\tborder-color: ${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT}\n\t\t\t${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW};\n\t}\n\n\t&:focus-visible {\n\t\toutline: 1px dotted ${VGA_BLACK};\n\t\toutline-offset: -3px;\n\t}\n`;\n"],"names":[],"sourceRoot":""}