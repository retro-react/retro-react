{"version":3,"file":"components-documentupload-__stories__-DocumentUpload-stories.afe7c041.iframe.bundle.js","mappings":";;;AAqBA;;;AAKA;;;AAKA","sources":["webpack://retro-react/./src/components/documentupload/DocumentUpload.styled.tsx"],"sourcesContent":["import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { alterColorEnhanced } from '@src/utils/alterColor';\nimport getColorScheme from '@src/utils/getColorScheme';\nimport {\n\tCRT_GREEN,\n\tVGA_BLACK,\n\tVGA_WHITE,\n\tWIN31_BUTTON_FACE,\n\tWIN31_BUTTON_HIGHLIGHT,\n\tWIN31_BUTTON_SHADOW,\n} from '@src/constants/colors';\nimport { FONT_SIZES, SYSTEM_FONT } from '@src/constants/fonts';\nimport type { UploadColor } from './DocumentUpload';\n\n// Retro animations\nconst blink = keyframes`\n\t0%, 50% { opacity: 1; }\n\t51%, 100% { opacity: 0; }\n`;\n\nconst scanLine = keyframes`\n\t0% { top: -2px; }\n\t100% { top: 100%; }\n`;\n\nconst crtFlicker = keyframes`\n\t0%, 98%, 100% { opacity: 1; }\n\t99% { opacity: 0.98; }\n`;\n\nexport const DropzoneWrapper = styled.label<{\n\t$color: UploadColor;\n\t$hasFile: boolean;\n\t$isDragOver: boolean;\n\t$isPressed: boolean;\n\t$isUploading: boolean;\n}>`\n\tposition: relative;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: ${(props) => (props.$hasFile ? 'flex-start' : 'center')};\n\tpadding: 16px;\n\twidth: 100%;\n\tmax-width: 100%;\n\tmin-height: 120px;\n\tbox-sizing: border-box;\n\tbackground: ${(props) => (props.$isDragOver ? WIN31_BUTTON_FACE : VGA_WHITE)};\n\tborder: 2px solid;\n\tborder-color: ${(props) =>\n\t\tprops.$isPressed\n\t\t\t? `${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT}`\n\t\t\t: `${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW}`};\n\tbox-shadow: ${(props) =>\n\t\tprops.$isPressed ? 'none' : 'inset 1px 1px 2px rgba(0, 0, 0, 0.1)'};\n\tcolor: ${VGA_BLACK};\n\tfont-family: ${SYSTEM_FONT};\n\tfont-size: ${FONT_SIZES.NORMAL};\n\tfont-weight: normal;\n\tcursor: ${(props) => (props.$isUploading ? 'wait' : 'pointer')};\n\ttransition: none;\n\toutline: none;\n\n\t/* Remove modern styling */\n\tborder-radius: 0;\n\n\t/* Responsive adjustments */\n\t@media (max-width: 768px) {\n\t\tpadding: 12px;\n\t\tmin-height: 100px;\n\t}\n\n\t@media (max-width: 480px) {\n\t\tpadding: 8px;\n\t\tmin-height: 80px;\n\t}\n\n\t&:focus {\n\t\toutline: 1px dotted ${VGA_BLACK};\n\t\toutline-offset: -3px;\n\t}\n\n\t&:hover:not(:disabled) {\n\t\tbackground: ${WIN31_BUTTON_FACE};\n\t}\n\n\t&:disabled {\n\t\tbackground: ${WIN31_BUTTON_FACE};\n\t\tcolor: ${WIN31_BUTTON_SHADOW};\n\t\tcursor: not-allowed;\n\t\tborder-color: ${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT}\n\t\t\t${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW};\n\t}\n\n\t/* Add CRT scan line effect */\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\theight: 2px;\n\t\tbackground: linear-gradient(\n\t\t\t90deg,\n\t\t\ttransparent,\n\t\t\t${CRT_GREEN}40,\n\t\t\ttransparent\n\t\t);\n\t\tanimation: ${scanLine} 2s linear infinite;\n\t\topacity: ${(props) => (props.$isUploading ? 1 : 0)};\n\t\ttransition: opacity 0.3s;\n\t}\n`;\n\nexport const HiddenInput = styled.input`\n\tdisplay: none;\n`;\n\n// --- Initial State Styles ---\n\nexport const UploadPrompt = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 0.75rem;\n\ttext-align: center;\n\tposition: relative;\n\tz-index: 1;\n`;\n\nexport const UploadIconWrapper = styled.div<{\n\t$color?: UploadColor;\n\ttheme?: any;\n}>`\n\tcolor: ${(props) => {\n\t\tconst baseColor = getColorScheme(props.$color || 'primary', props.theme);\n\t\treturn alterColorEnhanced(baseColor, -30);\n\t}};\n\tfilter: drop-shadow(2px 2px 0px rgba(0, 0, 0, 0.3));\n\n\tsvg {\n\t\tanimation: ${crtFlicker} 4s infinite;\n\t}\n`;\n\nexport const UploadText = styled.p`\n\tmargin: 0;\n\tfont-weight: bold;\n\tcolor: ${VGA_BLACK};\n\ttext-shadow: 1px 1px 0px rgba(255, 255, 255, 0.8);\n\tfont-size: 1.1rem;\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const SubText = styled.p`\n\tmargin: 0;\n\tfont-size: 0.85rem;\n\tcolor: ${WIN31_BUTTON_SHADOW};\n\ttext-shadow: 1px 1px 0px rgba(255, 255, 255, 0.8);\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const BlinkingCursor = styled.span`\n\tfont-size: 1.5rem;\n\tanimation: ${blink} 1s infinite;\n\tcolor: ${VGA_BLACK};\n`;\n\n// --- Progress Bar Styles ---\n\nexport const ProgressWrapper = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tgap: 0.5rem;\n\tfont-family: ${SYSTEM_FONT};\n\tcolor: ${VGA_BLACK};\n`;\n\nexport const ProgressText = styled.div`\n\tfont-size: 0.9rem;\n\tfont-weight: bold;\n\tletter-spacing: 1px;\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const ProgressBar = styled.div`\n\tfont-family: ${SYSTEM_FONT};\n\tfont-size: 0.8rem;\n\tletter-spacing: 1px;\n\tcolor: ${VGA_BLACK};\n\ttext-shadow: 1px 1px 0px rgba(255, 255, 255, 0.5);\n`;\n\n// --- File Selected State Styles ---\n\nexport const FileSelectedWrapper = styled.div`\n\tdisplay: flex;\n\talign-items: flex-start;\n\tgap: 1rem;\n\twidth: 100%;\n\tmax-width: 100%;\n\tcolor: ${VGA_BLACK};\n\tposition: relative;\n\tz-index: 1;\n\tbox-sizing: border-box;\n\toverflow: hidden;\n\n\t@media (max-width: 768px) {\n\t\tgap: 0.75rem;\n\t}\n\n\t@media (max-width: 480px) {\n\t\tgap: 0.5rem;\n\t}\n\n\tsvg {\n\t\tflex-shrink: 0;\n\t\tfilter: drop-shadow(1px 1px 0px rgba(0, 0, 0, 0.3));\n\t}\n`;\n\nexport const FileInfo = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\tgap: 0.25rem;\n\tmin-width: 0;\n\tflex-grow: 1;\n\tflex-shrink: 1;\n\toverflow: hidden;\n`;\n\nexport const FileHeader = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tgap: 0.5rem;\n\tmargin-bottom: 0.25rem;\n`;\n\nexport const FileType = styled.span<{ $color?: UploadColor; theme?: any }>`\n\tfont-size: 0.7rem;\n\tcolor: ${(props) => {\n\t\tconst baseColor = getColorScheme(props.$color || 'primary', props.theme);\n\t\treturn alterColorEnhanced(baseColor, -40);\n\t}};\n\tfont-weight: bold;\n\tbackground: ${VGA_WHITE};\n\tpadding: 2px 4px;\n\tborder: 1px solid ${WIN31_BUTTON_SHADOW};\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const FileStatus = styled.span`\n\tfont-size: 0.7rem;\n\tcolor: ${CRT_GREEN};\n\tfont-weight: bold;\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const FileName = styled.span`\n\twhite-space: nowrap;\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\tfont-weight: bold;\n\tfont-size: 1rem;\n\ttext-shadow: 1px 1px 0px rgba(255, 255, 255, 0.8);\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const FileSize = styled.span`\n\tfont-size: 0.8rem;\n\tcolor: ${WIN31_BUTTON_SHADOW};\n\tfont-weight: bold;\n\ttext-shadow: 1px 1px 0px rgba(255, 255, 255, 0.8);\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const FileDate = styled.span`\n\tfont-size: 0.75rem;\n\tcolor: ${WIN31_BUTTON_SHADOW};\n\tfont-family: ${SYSTEM_FONT};\n`;\n\nexport const RemoveButton = styled.button<{ $color?: UploadColor }>`\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n\twidth: 3rem;\n\theight: 2rem;\n\tflex-shrink: 0;\n\tmargin-left: auto;\n\tpadding: 0;\n\tborder: 2px solid;\n\tborder-color: ${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW}\n\t\t${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT};\n\tbackground: ${WIN31_BUTTON_FACE};\n\tcolor: ${VGA_BLACK};\n\tfont-size: 0.75rem;\n\tfont-weight: bold;\n\tfont-family: ${SYSTEM_FONT};\n\ttext-shadow: 1px 1px 0px rgba(255, 255, 255, 0.8);\n\tcursor: pointer;\n\ttransition: none;\n\ttext-transform: uppercase;\n\tletter-spacing: 1px;\n\n\t@media (max-width: 480px) {\n\t\twidth: 2.5rem;\n\t\theight: 1.8rem;\n\t\tfont-size: 0.7rem;\n\t}\n\n\t&:hover:not(:disabled) {\n\t\tbackground: ${(props) => getColorScheme('error', props.theme)};\n\t\tcolor: ${VGA_WHITE};\n\t\ttext-shadow: 1px 1px 0px rgba(0, 0, 0, 0.5);\n\t}\n\n\t&:active:not(:disabled) {\n\t\tborder-color: ${WIN31_BUTTON_SHADOW} ${WIN31_BUTTON_HIGHLIGHT}\n\t\t\t${WIN31_BUTTON_HIGHLIGHT} ${WIN31_BUTTON_SHADOW};\n\t}\n\n\t&:focus-visible {\n\t\toutline: 1px dotted ${VGA_BLACK};\n\t\toutline-offset: -3px;\n\t}\n`;\n\nexport const ButtonLabel = styled.span`\n\tposition: relative;\n\ttop: -1px;\n`;\n\nexport const ScanLine = styled.div`\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\tright: 0;\n\tbottom: 0;\n\tbackground: linear-gradient(90deg, transparent, ${CRT_GREEN}40, transparent);\n\theight: 2px;\n\tanimation: ${scanLine} 2s linear infinite;\n\tpointer-events: none;\n\tz-index: 1;\n`;\n"],"names":[],"sourceRoot":""}