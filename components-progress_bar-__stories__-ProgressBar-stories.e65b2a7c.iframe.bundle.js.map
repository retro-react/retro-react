{"version":3,"file":"components-progress_bar-__stories__-ProgressBar-stories.e65b2a7c.iframe.bundle.js","mappings":";;;;;;;AAkBA","sources":["webpack://retro-react/./src/components/progress_bar/ProgressBar.styled.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {\n\tComponentPatterns,\n\tgetPatternScheme,\n} from '@src/utils/getPatternScheme';\nimport { rgba } from '@src/utils/rgba';\nimport { BLACK, PRIMARY, WHITE } from '@src/constants/colors';\n\nconst move = keyframes`\n\t0% {\n\t\tbackground-position: 0% 0%;\n\t}\n\t100% {\n\t\tbackground-position: 100% 0%;\n\t}\n`;\n\nexport const ProgressBarWrapper = styled.div`\n\tposition: relative;\n\twidth: 100%;\n\theight: 100%;\n\tbox-sizing: border-box;\n`;\n\nexport const ProgressBar = styled.div<{\n\t$bg?: string;\n\t$value: number;\n\t$color?: string;\n\t$pattern: ComponentPatterns;\n\t$animated?: boolean;\n}>`\n\tbackground-image: url(${getPatternScheme('noise')});\n\n\tbackground-color: ${(props) => props.$bg || WHITE};\n\tpadding: 1rem;\n\tfont-size: 1.5rem;\n\tbox-shadow: 1px 1px 2px ${rgba(BLACK, 0.5)},\n\t\t-1px -1px 2px ${(props) => props.$bg || WHITE};\n\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tbackground-image: url(${getPatternScheme('noise')});\n\t\tpadding: 0.5rem;\n\t\topacity: 0.5;\n\t\tfilter: blur(0.8rem) brightness(0.5);\n\t}\n\n\t&::after {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 5px;\n\t\twidth: calc(${(props) => Math.min(Math.max(props.$value, 0), 100)}% - 10px);\n\t\theight: 100%;\n\t\tbackground-color: ${(props) => props.$color || PRIMARY};\n\t\tborder-radius: ${(props) =>\n\t\t\tprops.$value >= 100 ? '0.5rem' : '0.5rem 0 0 0.5rem'};\n\t\topacity: 0.5;\n\t\tmargin: 0.3rem 0;\n\n\t\tbackground-image: url(${(props) => getPatternScheme(props.$pattern)});\n\t\tbackground-repeat: repeat;\n\t\tbox-shadow: 1px 1px 2px ${rgba(BLACK, 0.5)};\n\n\t\t${(props) =>\n\t\t\tprops.$animated &&\n\t\t\tprops.$pattern !== 'solid' &&\n\t\t\tcss`\n\t\t\t\tanimation: ${move} ${props.$value * 0.2}s linear infinite;\n\t\t\t`}\n\t}\n\n\t${({ $bg }) =>\n\t\t$bg === 'none' &&\n\t\t`\n\tbox-shadow: none;\n\tbackground: none;\n\n\t&::before {\n\t\tcontent: none;\n\t}\n\n`}\n`;\n"],"names":[],"sourceRoot":""}