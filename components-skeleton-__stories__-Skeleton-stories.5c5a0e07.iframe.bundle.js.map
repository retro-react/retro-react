{"version":3,"file":"components-skeleton-__stories__-Skeleton-stories.5c5a0e07.iframe.bundle.js","mappings":";;;;;AAMA;;;;AAaA;AAyDA;AACA;AACA;AACA","sources":["webpack://retro-react/./src/components/skeleton/Skeleton.styled.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { lighten } from 'polished';\nimport { rgba } from '@src/utils/rgba';\nimport { BLACK } from '@src/constants/colors';\n\nconst blink = keyframes`\n  0% { opacity: 1; }\n  30% { opacity: 0.4; }\n  70% { opacity: 1; }\n  100% { opacity: 1; }\n`;\n\nconst pixelate = keyframes`\n  0% { background-size: 80px 80px; }\n  50% { background-size: 40px 40px; }\n  100% { background-size: 80px 80px; }\n`;\n\nexport const StyledSkeleton = styled.div<{\n\t$color: string;\n\t$shape: string;\n\t$rounded: boolean;\n\t$effect: string;\n\t$height: string | number;\n\t$gradientWidth: number;\n}>`\n\theight: ${(props) => props.$height};\n\twidth: 100%;\n\tbackground-color: ${(props) => props.$color};\n\n\t${(props) =>\n\t\tprops.$effect === 'blink' &&\n\t\tcss`\n\t\t\tbackground-image: repeating-linear-gradient(\n\t\t\t\t45deg,\n\t\t\t\t${lighten(0.1, props.$color)} 25%,\n\t\t\t\t${props.$color} 25%,\n\t\t\t\t${props.$color} 50%,\n\t\t\t\t${lighten(0.1, props.$color)} 50%,\n\t\t\t\t${lighten(0.1, props.$color)} 75%\n\t\t\t);\n\t\t\tbackground-size: 80px 80px;\n\t\t\tanimation: ${pixelate} 3s infinite;\n\t\t`};\n\n\tmargin-bottom: 10px;\n\n\t${(props) =>\n\t\tprops.$shape === 'circle' &&\n\t\tcss`\n\t\t\twidth: ${props.$height};\n\t\t\tborder-radius: 50%;\n\t\t`};\n\n\t${(props) =>\n\t\tprops.$effect === 'shimmer' &&\n\t\tcss`\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\tto right,\n\t\t\t\t${props.$color} 0%,\n\t\t\t\t${lighten(0.2, props.$color)} 20%,\n\t\t\t\t${lighten(0.3, props.$color)} 40%,\n\t\t\t\t${props.$color} 100%\n\t\t\t);\n\t\t\tbackground-repeat: no-repeat;\n\t\t\tbackground-size: ${props.$gradientWidth}px\n\t\t\t\t${typeof props.$height === 'string'\n\t\t\t\t\t? props.$height\n\t\t\t\t\t: `${props.$height}px`};\n\t\t\tborder-radius: ${props.$shape === 'circle'\n\t\t\t\t? '50%'\n\t\t\t\t: props.$rounded\n\t\t\t\t? '5px'\n\t\t\t\t: '0px'};\n\t\t\tanimation: ${keyframes`\n\t\t\t\t\t0% { background-position: ${-props.$gradientWidth}px 0; }\n\t\t\t\t\t70% { background-position: ${props.$gradientWidth}px 0; }\n\t\t\t\t\t100% { background-position: ${props.$gradientWidth}px 0; }\n\t\t\t\t`} 3s infinite linear;\n\t\t`};\n\n\tbox-shadow: 3px 3px 0px ${rgba(BLACK, 0.2)};\n`;\n"],"names":[],"sourceRoot":""}