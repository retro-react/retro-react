"use strict";(globalThis.webpackChunkretro_react=globalThis.webpackChunkretro_react||[]).push([[9643],{"./node_modules/@storybook/react/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{var _chunk_JWY6Y6NU_mjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/react/dist/chunk-JWY6Y6NU.mjs"),_storybook_global__WEBPACK_IMPORTED_MODULE_2__=(__webpack_require__("./node_modules/@storybook/react/dist/chunk-R4NKYYJA.mjs"),__webpack_require__("./node_modules/@storybook/global/dist/index.mjs")),_storybook_preview_api__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("@storybook/preview-api"),{window:globalWindow}=(__webpack_require__("@storybook/client-logger"),_storybook_global__WEBPACK_IMPORTED_MODULE_2__.global);globalWindow&&(globalWindow.STORYBOOK_ENV="react");var api=(0,_storybook_preview_api__WEBPACK_IMPORTED_MODULE_3__.start)(_chunk_JWY6Y6NU_mjs__WEBPACK_IMPORTED_MODULE_0__.b,{render:_chunk_JWY6Y6NU_mjs__WEBPACK_IMPORTED_MODULE_0__.s});api.forceReRender,api.clientApi.raw;_chunk_JWY6Y6NU_mjs__WEBPACK_IMPORTED_MODULE_0__.s},"./src/components/chip/__stories__/Chip.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ChipsVsButtons:()=>ChipsVsButtons,Default:()=>Default,Grouped:()=>Grouped,Highlight:()=>Highlight,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Chip_stories});__webpack_require__("./node_modules/@storybook/react/dist/index.mjs");var theme_ui_components_esm=__webpack_require__("./node_modules/@theme-ui/components/dist/theme-ui-components.esm.js"),Button=__webpack_require__("./src/components/button/Button.tsx"),Group=__webpack_require__("./src/components/group/Group.tsx"),Text=__webpack_require__("./src/components/text/Text.tsx"),react=__webpack_require__("./node_modules/react/index.js"),classNames=__webpack_require__("./src/utils/classNames.ts"),commonClassNames=__webpack_require__("./src/constants/commonClassNames.ts"),emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),colors=__webpack_require__("./src/constants/colors.ts"),fonts=__webpack_require__("./src/constants/fonts.ts");const Chip=(0,emotion_styled_base_browser_esm.Z)("div",{target:"e1fr8c690"})("display:inline-flex;align-items:center;justify-content:center;position:relative;padding:3px 10px;font-size:",fonts.um.SMALL,";font-family:",fonts.ks,";font-weight:normal;border:1px solid ",colors.Ro,";background:",(_ref=>{let{$color}=_ref;return function getChipColorScheme(color){switch(color){case"error":return colors.pn;case"success":return colors.MR;case"warn":return colors.u_;case"secondary":return colors.Vb;case"highlight":return colors.X2;case"greyscale":return colors.wB;default:return colors._8}}($color)}),";color:",(_ref2=>{let{$color}=_ref2;return"warn"===$color||"highlight"===$color||"greyscale"===$color?colors.Ro:colors.fq}),";text-shadow:none;cursor:",(_ref3=>{let{$clickable}=_ref3;return $clickable?"pointer":"default"}),";user-select:none;transition:none;min-height:18px;border-radius:0;box-shadow:1px 1px 0px ",colors.Ro,";",(_ref4=>{let{$clickable}=_ref4;return!$clickable&&`\n\t\tborder-color: ${colors.n7};\n\t\tbox-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.2);\n\t`})," ",(_ref5=>{let{$clickable}=_ref5;return $clickable&&`\n\t\t&:hover {\n\t\t\tbox-shadow: 2px 2px 0px ${colors.Ro};\n\t\t\ttransform: translate(-1px, -1px);\n\t\t}\n\n\t\t&:active {\n\t\t\tbox-shadow: 0px 0px 0px ${colors.Ro};\n\t\t\ttransform: translate(1px, 1px);\n\t\t}\n\n\t\t&:focus-visible {\n\t\t\toutline: 1px dotted ${colors.fq};\n\t\t\toutline-offset: -2px;\n\t\t}\n\t`}),";");try{Chip.displayName="Chip",Chip.__docgenInfo={description:"",displayName:"Chip",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"Theme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"ElementType<any>"}},$color:{defaultValue:null,description:"",name:"$color",required:!0,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"error"'},{value:'"warn"'},{value:'"greyscale"'},{value:'"highlight"'}]}},$clickable:{defaultValue:null,description:"",name:"$clickable",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/chip/Chip.styled.tsx#Chip"]={docgenInfo:Chip.__docgenInfo,name:"Chip",path:"src/components/chip/Chip.styled.tsx#Chip"})}catch(__react_docgen_typescript_loader_error){}var theme_ui_jsx_runtime_esm=__webpack_require__("./node_modules/theme-ui/jsx-runtime/dist/theme-ui-jsx-runtime.esm.js");const Chip_Chip=(0,react.forwardRef)(((_ref,ref)=>{let{id,className,color="primary",children,sx,...rest}=_ref;const isClickable=!!rest.onClick||!!rest.onKeyDown;return(0,theme_ui_jsx_runtime_esm.tZ)(Chip,{id,sx,ref,$color:color,$clickable:isClickable,className:(0,classNames.A)("chip-root",className,commonClassNames.Z),...rest,children})}));Chip_Chip.displayName="Chip";try{Chip_Chip.displayName="Chip",Chip_Chip.__docgenInfo={description:"Chips are used to represent small blocks of information. Pass the `onClick` or `onKeyDown` prop to make the Chip clickable.",displayName:"Chip",props:{color:{defaultValue:{value:"primary"},description:"The color of the Chip.",name:"color",required:!1,type:{name:"enum",value:[{value:'"primary"'},{value:'"secondary"'},{value:'"success"'},{value:'"error"'},{value:'"warn"'},{value:'"greyscale"'},{value:'"highlight"'}]}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"ThemeUICSSObject"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/chip/Chip.tsx#Chip"]={docgenInfo:Chip_Chip.__docgenInfo,name:"Chip",path:"src/components/chip/Chip.tsx#Chip"})}catch(__react_docgen_typescript_loader_error){}var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Chip_stories={title:"Components/Chip",component:Chip_Chip},Template=args=>(0,jsx_runtime.jsxs)(theme_ui_components_esm.kC,{sx:{gap:2,alignItems:"center"},children:[(0,jsx_runtime.jsx)(Chip_Chip,{...args}),(0,jsx_runtime.jsx)(Chip_Chip,{...args,onClick:()=>{},children:"Clickable Chip"})]});Template.displayName="Template";const GroupTemplate=()=>(0,jsx_runtime.jsxs)(Group.Z,{children:[(0,jsx_runtime.jsx)(Chip_Chip,{color:"primary",children:"Pizza"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"secondary",children:"Sushi"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"success",children:"Burgers"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"error",children:"Tacos"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"warn",children:"Chicken"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"greyscale",children:"Lobster"})]});GroupTemplate.displayName="GroupTemplate";const ComparisonTemplate=()=>(0,jsx_runtime.jsxs)("div",{style:{padding:"2rem",display:"flex",flexDirection:"column",gap:"1rem"},children:[(0,jsx_runtime.jsx)(Text.x,{children:"Chips vs Buttons - Visual Differentiation:"}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"1rem"},children:[(0,jsx_runtime.jsx)(Text.x,{children:"Chips (flat labels):"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"primary",children:"Tag"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"success",children:"Active"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"warn",children:"Warning"})]}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"1rem"},children:[(0,jsx_runtime.jsx)(Text.x,{children:"Buttons (3D interactive):"}),(0,jsx_runtime.jsx)(Button.z,{size:"small",children:"Action"}),(0,jsx_runtime.jsx)(Button.z,{size:"small",variant:"outline",children:"Save"}),(0,jsx_runtime.jsx)(Button.z,{size:"small",variant:"primary",children:"Cancel"})]}),(0,jsx_runtime.jsxs)("div",{style:{display:"flex",alignItems:"center",gap:"1rem"},children:[(0,jsx_runtime.jsx)(Text.x,{children:"Clickable chips:"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"primary",onClick:()=>{},children:"Clickable"}),(0,jsx_runtime.jsx)(Chip_Chip,{color:"secondary",onClick:()=>{},children:"Interactive"})]})]});ComparisonTemplate.displayName="ComparisonTemplate";const Default=Template.bind({});Default.args={color:"primary",children:"Primary Chip"};const Highlight=Template.bind({});Highlight.args={color:"highlight",children:"NEW"};const Grouped=GroupTemplate.bind({}),ChipsVsButtons=ComparisonTemplate.bind({});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"args => {\n  return <Flex sx={{\n    gap: 2,\n    alignItems: 'center'\n  }}>\r\n            <Chip {...args} />\r\n            <Chip {...args} onClick={() => {\n      /* Chip clicked! */\n    }}>\r\n                Clickable Chip\r\n            </Chip>\r\n        </Flex>;\n}",...Default.parameters?.docs?.source}}},Highlight.parameters={...Highlight.parameters,docs:{...Highlight.parameters?.docs,source:{originalSource:"args => {\n  return <Flex sx={{\n    gap: 2,\n    alignItems: 'center'\n  }}>\r\n            <Chip {...args} />\r\n            <Chip {...args} onClick={() => {\n      /* Chip clicked! */\n    }}>\r\n                Clickable Chip\r\n            </Chip>\r\n        </Flex>;\n}",...Highlight.parameters?.docs?.source}}},Grouped.parameters={...Grouped.parameters,docs:{...Grouped.parameters?.docs,source:{originalSource:'() => {\n  return <Group>\r\n            <Chip color="primary">Pizza</Chip>\r\n            <Chip color="secondary">Sushi</Chip>\r\n            <Chip color="success">Burgers</Chip>\r\n            <Chip color="error">Tacos</Chip>\r\n            <Chip color="warn">Chicken</Chip>\r\n            <Chip color="greyscale">Lobster</Chip>\r\n        </Group>;\n}',...Grouped.parameters?.docs?.source},description:{story:"Grouped chips are used to display multiple chips in a group. Used with `Group` component.",...Grouped.parameters?.docs?.description}}},ChipsVsButtons.parameters={...ChipsVsButtons.parameters,docs:{...ChipsVsButtons.parameters?.docs,source:{originalSource:"() => {\n  return <div style={{\n    padding: '2rem',\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '1rem'\n  }}>\r\n            <Text>Chips vs Buttons - Visual Differentiation:</Text>\r\n\r\n            <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      gap: '1rem'\n    }}>\r\n                <Text>Chips (flat labels):</Text>\r\n                <Chip color=\"primary\">Tag</Chip>\r\n                <Chip color=\"success\">Active</Chip>\r\n                <Chip color=\"warn\">Warning</Chip>\r\n            </div>\r\n\r\n            <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      gap: '1rem'\n    }}>\r\n                <Text>Buttons (3D interactive):</Text>\r\n                <Button size=\"small\">Action</Button>\r\n                <Button size=\"small\" variant=\"outline\">\r\n                    Save\r\n                </Button>\r\n                <Button size=\"small\" variant=\"primary\">\r\n                    Cancel\r\n                </Button>\r\n            </div>\r\n\r\n            <div style={{\n      display: 'flex',\n      alignItems: 'center',\n      gap: '1rem'\n    }}>\r\n                <Text>Clickable chips:</Text>\r\n                <Chip color=\"primary\" onClick={() => {}}>\r\n                    Clickable\r\n                </Chip>\r\n                <Chip color=\"secondary\" onClick={() => {}}>\r\n                    Interactive\r\n                </Chip>\r\n            </div>\r\n        </div>;\n}",...ChipsVsButtons.parameters?.docs?.source},description:{story:"Shows visual comparison between chips and buttons",...ChipsVsButtons.parameters?.docs?.description}}};const __namedExportsOrder=["Default","Highlight","Grouped","ChipsVsButtons"];try{Grouped.displayName="Grouped",Grouped.__docgenInfo={description:"Grouped chips are used to display multiple chips in a group. Used with `Group` component.",displayName:"Grouped",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/chip/__stories__/Chip.stories.tsx#Grouped"]={docgenInfo:Grouped.__docgenInfo,name:"Grouped",path:"src/components/chip/__stories__/Chip.stories.tsx#Grouped"})}catch(__react_docgen_typescript_loader_error){}try{ChipsVsButtons.displayName="ChipsVsButtons",ChipsVsButtons.__docgenInfo={description:"Shows visual comparison between chips and buttons",displayName:"ChipsVsButtons",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/chip/__stories__/Chip.stories.tsx#ChipsVsButtons"]={docgenInfo:ChipsVsButtons.__docgenInfo,name:"ChipsVsButtons",path:"src/components/chip/__stories__/Chip.stories.tsx#ChipsVsButtons"})}catch(__react_docgen_typescript_loader_error){}},"./src/components/group/Group.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>Group});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_src_utils_classNames__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/utils/classNames.ts"),theme_ui_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/theme-ui/jsx-runtime/dist/theme-ui-jsx-runtime.esm.js");const Group=(0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(((_ref,ref)=>{let{children,gap="10px",direction="row",id,className,sx,...rest}=_ref;return(0,theme_ui_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.tZ)("div",{id,ref,sx,className:(0,_src_utils_classNames__WEBPACK_IMPORTED_MODULE_2__.A)("group-root",className),style:{display:"flex",gap,flexDirection:direction},...rest,children})}));Group.displayName="Group";try{Group.displayName="Group",Group.__docgenInfo={description:"Group is a simple layout component that provides a way to group and apply layout to its children.",displayName:"Group",props:{children:{defaultValue:null,description:"The content of the group.",name:"children",required:!0,type:{name:"ReactNode"}},gap:{defaultValue:{value:"10px"},description:"The gap between each child element.",name:"gap",required:!1,type:{name:"string"}},direction:{defaultValue:{value:"row"},description:"The direction of the group.\nCan be either 'row' or 'column'.",name:"direction",required:!1,type:{name:"enum",value:[{value:'"row"'},{value:'"column"'}]}},sx:{defaultValue:null,description:"",name:"sx",required:!1,type:{name:"ThemeUICSSObject"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/group/Group.tsx#Group"]={docgenInfo:Group.__docgenInfo,name:"Group",path:"src/components/group/Group.tsx#Group"})}catch(__react_docgen_typescript_loader_error){}}}]);