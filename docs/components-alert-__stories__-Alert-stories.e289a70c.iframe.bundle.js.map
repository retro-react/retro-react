{"version":3,"file":"components-alert-__stories__-Alert-stories.e289a70c.iframe.bundle.js","mappings":";;;;;;;;;AAyCA","sources":["webpack://retro-react/./src/components/alert/Alert.styled.tsx"],"sourcesContent":["import { css, keyframes, Theme } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\nimport { alterColor, alterColorEnhanced } from '@src/utils/alterColor';\r\nimport {\r\n\tERROR,\r\n\tPRIMARY,\r\n\tSECONDARY,\r\n\tSHADE_1,\r\n\tSHADE_6,\r\n\tSUCCESS,\r\n\tWARN,\r\n} from '@src/constants/colors';\r\nimport type { AlertColor } from './Alert';\r\n\r\nfunction getColorScheme(color: AlertColor, theme: Theme) {\r\n\tswitch (color) {\r\n\t\tcase 'error':\r\n\t\t\treturn (theme.colors && theme.colors[color]) || ERROR;\r\n\t\tcase 'success':\r\n\t\t\treturn (theme.colors && theme.colors[color]) || SUCCESS;\r\n\t\tcase 'warn':\r\n\t\t\treturn (theme.colors && theme.colors[color]) || alterColor(WARN, 150);\r\n\t\tcase 'secondary':\r\n\t\t\treturn (theme.colors && theme.colors[color]) || SECONDARY;\r\n\t\tcase 'primary':\r\n\t\tdefault:\r\n\t\t\treturn (theme.colors && theme.colors[color]) || PRIMARY;\r\n\t}\r\n}\r\n\r\nconst opacityAnimation = keyframes`\r\n\tfrom {\r\n\t\topacity: 0;\r\n\t\ttransform: translateY(20%);\r\n\t}\r\n\tto {\r\n\t\topacity: 1;\r\n\t\ttransform: translateY(0);\r\n\t}\r\n`;\r\n\r\nexport const Alert = styled.div<{ $color: AlertColor; $isOpenProp?: boolean }>`\r\n\tdisplay: inline-flex;\r\n\tflex-direction: column;\r\n\tposition: relative;\r\n\tpadding: 0.2rem 3rem 0.3rem 1.2rem;\r\n\tfont-size: 0.875rem;\r\n\tfont-family: 'Trebuchet MS', Helvetica, sans-serif;\r\n\tborder-top: 2px solid ${SHADE_6};\r\n\tbackground: linear-gradient(\r\n\t\tto right,\r\n\t\t${({ $color, theme }) =>\r\n\t\t\t\talterColorEnhanced(getColorScheme($color, theme), -20)}\r\n\t\t\t80%,\r\n\t\t${({ $color, theme }) => getColorScheme($color, theme)} 100%\r\n\t);\r\n\tcolor: ${SHADE_1};\r\n\twidth: 100%;\r\n\tmin-height: 2.5rem;\r\n\r\n\t&::before {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\ttop: 0;\r\n\t\tleft: 0;\r\n\t\twidth: 0.5rem;\r\n\t\theight: 100%;\r\n\t\tbackground: ${({ $color, theme }) => getColorScheme($color, theme)};\r\n\t}\r\n\r\n\t${({ $isOpenProp }) =>\r\n\t\t$isOpenProp &&\r\n\t\tcss`\r\n\t\t\tanimation: ${opacityAnimation} 0.15s ease-out;\r\n\t\t`}\r\n`;\r\n\r\nexport const Title = styled.div`\r\n\tfont-weight: 700;\r\n\tmargin-bottom: 0.2rem;\r\n`;\r\n\r\nexport const CloseButton = styled.button<{ $icon: string }>`\r\n\tposition: absolute;\r\n\ttop: 0.2rem;\r\n\tright: 0.2rem;\r\n\twidth: 1.5rem;\r\n\theight: 1.5rem;\r\n\tborder: none;\r\n\tborder-radius: 50%;\r\n\tcursor: pointer;\r\n\r\n\tbackground-image: url(${({ $icon }) => $icon});\r\n\tbackground-color: transparent;\r\n\r\n\t&:hover {\r\n\t\ttransform: scale(1.1);\r\n\t}\r\n\r\n\t&:active {\r\n\t\ttransform: scale(0.9);\r\n\t}\r\n`;\r\n"],"names":[],"sourceRoot":""}