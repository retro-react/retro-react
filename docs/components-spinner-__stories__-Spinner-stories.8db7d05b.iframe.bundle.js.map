{"version":3,"file":"components-spinner-__stories__-Spinner-stories.8db7d05b.iframe.bundle.js","mappings":";;;;;;;AAoCA;AApBA;AAuCA","sources":["webpack://retro-react/./src/components/spinner/Spinner.styled.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport { rgba } from '@src/utils/rgba';\nimport { SpinnerSize } from './Spinner';\n\nconst createLinearGradient = (colors: string[]) =>\n\t`linear-gradient(45deg, ${colors.join(', ')})`;\n\nconst createRadialGradient = (\n\tcolors: string[],\n\tposition: string = 'circle',\n): string => {\n\treturn `radial-gradient(${position}, ${colors.join(', ')})`;\n};\n\nconst colorChange = (colors: string[]) => keyframes`\n  ${colors\n\t\t.map(\n\t\t\t(color, index) => `\n    ${(index / colors.length) * 100}% {\n      border-color: ${color} transparent transparent transparent;\n    }\n  `,\n\t\t)\n\t\t.join('')}\n`;\n\nconst spin = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Wrapper = styled.div`\n\tdisplay: inline-block;\n`;\n\nconst spinnerSize = {\n\tsmall: '32px',\n\tmedium: '64px',\n\tlarge: '128px',\n};\n\nexport const CircleSpinner = styled.div<{\n\t$colors: string[];\n\t$size: SpinnerSize;\n}>`\n\twidth: ${({ $size }) => spinnerSize[$size]};\n\theight: ${({ $size }) => spinnerSize[$size]};\n\tborder: 8px solid;\n\tborder-radius: 50%;\n\tanimation: ${spin} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite,\n\t\t${({ $colors }) =>\n\t\t\tcss`\n\t\t\t\t${colorChange($colors)} 3s linear infinite\n\t\t\t`};\n\tborder-color: ${({ $colors }) => $colors[0]} transparent transparent\n\t\ttransparent;\n\n\t&:nth-child(1) {\n\t\tanimation-delay: -0.45s;\n\t}\n\n\t&:nth-child(2) {\n\t\tanimation-delay: -0.3s;\n\t}\n\n\t&:nth-child(3) {\n\t\tanimation-delay: -0.15s;\n\t}\n`;\n\nexport const SquareSpinner = styled.div<{\n\t$colors: string[];\n\t$size: SpinnerSize;\n}>`\n\tposition: relative;\n\twidth: ${({ $size }) => spinnerSize[$size]};\n\theight: ${({ $size }) => spinnerSize[$size]};\n\toverflow: hidden;\n\tclip-path: polygon(20% 20%, 80% 20%, 80% 80%, 20% 80%);\n\n\t${({ $size, $colors }) =>\n\t\t$size === 'small' &&\n\t\tcss`\n\t\t\tbackground: ${createLinearGradient($colors)};\n\t\t\tanimation: ${spin} 1s linear infinite;\n\t\t`}\n\n\t${({ $size, $colors }) =>\n\t\t($size === 'large' || $size === 'medium') &&\n\t\tcss`\n\t\t\t&::before {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\ttop: -2px;\n\t\t\t\tleft: -2px;\n\t\t\t\twidth: ${spinnerSize[$size]};\n\t\t\t\theight: ${spinnerSize[$size]};\n\t\t\t\tbackground: ${createLinearGradient($colors)};\n\t\t\t\tanimation: ${spin} 1s linear infinite;\n\t\t\t}\n\n\t\t\t&::after {\n\t\t\t\tcontent: '';\n\t\t\t\tposition: absolute;\n\t\t\t\twidth: ${$size === 'large'\n\t\t\t\t\t? spinnerSize['medium']\n\t\t\t\t\t: spinnerSize['small']};\n\t\t\t\theight: ${$size === 'large'\n\t\t\t\t\t? spinnerSize['medium']\n\t\t\t\t\t: spinnerSize['small']};\n\t\t\t\ttop: 50%;\n\t\t\t\tleft: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\tbackground: ${createLinearGradient($colors)};\n\t\t\t\tbox-shadow: inset 0 0 0 2px ${rgba($colors[0], 0.2)};\n\t\t\t}\n\t\t`}\n`;\n\nexport const StarSpinner = styled.div<{\n\t$colors: string[];\n\t$size: SpinnerSize;\n}>`\n\tdisplay: inline-block;\n\twidth: ${({ $size }) => spinnerSize[$size]};\n\theight: ${({ $size }) => spinnerSize[$size]};\n\tbackground-image: ${({ $colors }) => createRadialGradient($colors)};\n\tclip-path: polygon(\n\t\t50% 0%,\n\t\t61% 35%,\n\t\t98% 35%,\n\t\t68% 57%,\n\t\t79% 91%,\n\t\t50% 70%,\n\t\t21% 91%,\n\t\t32% 57%,\n\t\t2% 35%,\n\t\t39% 35%\n\t);\n\tbackground-size: 100% 100%;\n\n\tanimation: ${spin} 1.5s linear infinite;\n`;\n\nconst spinnerHeight = {\n\tsmall: '48px',\n\tmedium: '96px',\n\tlarge: '192px',\n};\n\nconst spinnerBeforeWidth = {\n\tsmall: '50px',\n\tmedium: '100px',\n\tlarge: '200px',\n};\n\nconst spinnerBeforeLeft = {\n\tsmall: '-8px',\n\tmedium: '-16px',\n\tlarge: '-32px',\n};\n\nexport const DiamondSpinner = styled.div<{\n\t$colors: string[];\n\t$size: keyof typeof spinnerSize;\n}>`\n\tposition: relative;\n\twidth: ${({ $size }) => spinnerSize[$size]};\n\theight: ${({ $size }) => spinnerHeight[$size]};\n\tmargin-left: 16px;\n\tmargin-right: 16px;\n\toverflow: hidden;\n\tclip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);\n\n\t&::before {\n\t\tcontent: '';\n\t\tposition: absolute;\n\t\twidth: ${({ $size }) => spinnerBeforeWidth[$size]};\n\t\theight: ${({ $size }) => spinnerBeforeWidth[$size]};\n\t\ttop: 0;\n\t\tleft: ${({ $size }) => spinnerBeforeLeft[$size]};\n\t\tbackground-image: ${({ $colors }) => createLinearGradient($colors)};\n\t\tanimation: ${spin} 1s linear infinite;\n\t}\n`;\n"],"names":[],"sourceRoot":""}