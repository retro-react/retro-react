{"version":3,"file":"components-spinner-__stories__-Spinner-stories.e0536adb.iframe.bundle.js","mappings":";;;;;;;AAoCA;AApBA;AAuCA","sources":["webpack://retro-react/./src/components/spinner/Spinner.styled.tsx"],"sourcesContent":["import { css, keyframes } from '@emotion/react';\r\nimport styled from '@emotion/styled';\r\nimport { rgba } from '@src/utils/rgba';\r\nimport { SpinnerSize } from './Spinner';\r\n\r\nconst createLinearGradient = (colors: string[]) =>\r\n\t`linear-gradient(45deg, ${colors.join(', ')})`;\r\n\r\nconst createRadialGradient = (\r\n\tcolors: string[],\r\n\tposition: string = 'circle',\r\n): string => {\r\n\treturn `radial-gradient(${position}, ${colors.join(', ')})`;\r\n};\r\n\r\nconst colorChange = (colors: string[]) => keyframes`\r\n  ${colors\r\n\t\t.map(\r\n\t\t\t(color, index) => `\r\n    ${(index / colors.length) * 100}% {\r\n      border-color: ${color} transparent transparent transparent;\r\n    }\r\n  `,\r\n\t\t)\r\n\t\t.join('')}\r\n`;\r\n\r\nconst spin = keyframes`\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n\tdisplay: inline-block;\r\n`;\r\n\r\nconst spinnerSize = {\r\n\tsmall: '32px',\r\n\tmedium: '64px',\r\n\tlarge: '128px',\r\n};\r\n\r\nexport const CircleSpinner = styled.div<{\r\n\t$colors: string[];\r\n\t$size: SpinnerSize;\r\n}>`\r\n\twidth: ${({ $size }) => spinnerSize[$size]};\r\n\theight: ${({ $size }) => spinnerSize[$size]};\r\n\tborder: 8px solid;\r\n\tborder-radius: 50%;\r\n\tanimation: ${spin} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite,\r\n\t\t${({ $colors }) =>\r\n\t\t\tcss`\r\n\t\t\t\t${colorChange($colors)} 3s linear infinite\r\n\t\t\t`};\r\n\tborder-color: ${({ $colors }) => $colors[0]} transparent transparent\r\n\t\ttransparent;\r\n\r\n\t&:nth-child(1) {\r\n\t\tanimation-delay: -0.45s;\r\n\t}\r\n\r\n\t&:nth-child(2) {\r\n\t\tanimation-delay: -0.3s;\r\n\t}\r\n\r\n\t&:nth-child(3) {\r\n\t\tanimation-delay: -0.15s;\r\n\t}\r\n`;\r\n\r\nexport const SquareSpinner = styled.div<{\r\n\t$colors: string[];\r\n\t$size: SpinnerSize;\r\n}>`\r\n\tposition: relative;\r\n\twidth: ${({ $size }) => spinnerSize[$size]};\r\n\theight: ${({ $size }) => spinnerSize[$size]};\r\n\toverflow: hidden;\r\n\tclip-path: polygon(20% 20%, 80% 20%, 80% 80%, 20% 80%);\r\n\r\n\t${({ $size, $colors }) =>\r\n\t\t$size === 'small' &&\r\n\t\tcss`\r\n\t\t\tbackground: ${createLinearGradient($colors)};\r\n\t\t\tanimation: ${spin} 1s linear infinite;\r\n\t\t`}\r\n\r\n\t${({ $size, $colors }) =>\r\n\t\t($size === 'large' || $size === 'medium') &&\r\n\t\tcss`\r\n\t\t\t&::before {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\ttop: -2px;\r\n\t\t\t\tleft: -2px;\r\n\t\t\t\twidth: ${spinnerSize[$size]};\r\n\t\t\t\theight: ${spinnerSize[$size]};\r\n\t\t\t\tbackground: ${createLinearGradient($colors)};\r\n\t\t\t\tanimation: ${spin} 1s linear infinite;\r\n\t\t\t}\r\n\r\n\t\t\t&::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\twidth: ${$size === 'large'\r\n\t\t\t\t\t? spinnerSize['medium']\r\n\t\t\t\t\t: spinnerSize['small']};\r\n\t\t\t\theight: ${$size === 'large'\r\n\t\t\t\t\t? spinnerSize['medium']\r\n\t\t\t\t\t: spinnerSize['small']};\r\n\t\t\t\ttop: 50%;\r\n\t\t\t\tleft: 50%;\r\n\t\t\t\ttransform: translate(-50%, -50%);\r\n\t\t\t\tbackground: ${createLinearGradient($colors)};\r\n\t\t\t\tbox-shadow: inset 0 0 0 2px ${rgba($colors[0], 0.2)};\r\n\t\t\t}\r\n\t\t`}\r\n`;\r\n\r\nexport const StarSpinner = styled.div<{\r\n\t$colors: string[];\r\n\t$size: SpinnerSize;\r\n}>`\r\n\tdisplay: inline-block;\r\n\twidth: ${({ $size }) => spinnerSize[$size]};\r\n\theight: ${({ $size }) => spinnerSize[$size]};\r\n\tbackground-image: ${({ $colors }) => createRadialGradient($colors)};\r\n\tclip-path: polygon(\r\n\t\t50% 0%,\r\n\t\t61% 35%,\r\n\t\t98% 35%,\r\n\t\t68% 57%,\r\n\t\t79% 91%,\r\n\t\t50% 70%,\r\n\t\t21% 91%,\r\n\t\t32% 57%,\r\n\t\t2% 35%,\r\n\t\t39% 35%\r\n\t);\r\n\tbackground-size: 100% 100%;\r\n\r\n\tanimation: ${spin} 1.5s linear infinite;\r\n`;\r\n\r\nconst spinnerHeight = {\r\n\tsmall: '48px',\r\n\tmedium: '96px',\r\n\tlarge: '192px',\r\n};\r\n\r\nconst spinnerBeforeWidth = {\r\n\tsmall: '50px',\r\n\tmedium: '100px',\r\n\tlarge: '200px',\r\n};\r\n\r\nconst spinnerBeforeLeft = {\r\n\tsmall: '-8px',\r\n\tmedium: '-16px',\r\n\tlarge: '-32px',\r\n};\r\n\r\nexport const DiamondSpinner = styled.div<{\r\n\t$colors: string[];\r\n\t$size: keyof typeof spinnerSize;\r\n}>`\r\n\tposition: relative;\r\n\twidth: ${({ $size }) => spinnerSize[$size]};\r\n\theight: ${({ $size }) => spinnerHeight[$size]};\r\n\tmargin-left: 16px;\r\n\tmargin-right: 16px;\r\n\toverflow: hidden;\r\n\tclip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%);\r\n\r\n\t&::before {\r\n\t\tcontent: '';\r\n\t\tposition: absolute;\r\n\t\twidth: ${({ $size }) => spinnerBeforeWidth[$size]};\r\n\t\theight: ${({ $size }) => spinnerBeforeWidth[$size]};\r\n\t\ttop: 0;\r\n\t\tleft: ${({ $size }) => spinnerBeforeLeft[$size]};\r\n\t\tbackground-image: ${({ $colors }) => createLinearGradient($colors)};\r\n\t\tanimation: ${spin} 1s linear infinite;\r\n\t}\r\n`;\r\n"],"names":[],"sourceRoot":""}